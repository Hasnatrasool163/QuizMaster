package main;

import frame.About_Frame;
import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import terms.TermsAndConditions;
import frame.Menu;

/**
 *
 * @author MuhammadHasnatRasool
 */
public class Main extends javax.swing.JFrame {

    ArrayList<JList<?>> allLists = new ArrayList<>();
    private static Main instance;

    public static Main getInstance() {
        if (instance == null) {
            instance = new Main();
        }
        return instance;
    }

    /**
     * Creates new form Main
     */
    public Main() {
        if (instance != null) {
            throw new IllegalStateException("Instance already exists");
        }
        requestFocus();
        instance = this;
        initComponents();
        allLists.add(jList1);
        allLists.add(jList2);
        allLists.add(jList3);
        allLists.add(jList4);
        allLists.add(jList5);
        allLists.add(jList6);
        allLists.add(jList7);
        allLists.add(jList8);
        allLists.add(jList9);
        allLists.add(jList10);
        allLists.add(jList11);
        allLists.add(jList12);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList6 = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList5 = new javax.swing.JList<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList7 = new javax.swing.JList<>();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jList8 = new javax.swing.JList<>();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jList9 = new javax.swing.JList<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jList10 = new javax.swing.JList<>();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jList11 = new javax.swing.JList<>();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jList12 = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusTraversalPolicyProvider(true);
        setForeground(new java.awt.Color(0, 0, 0));
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(1100, 700));
        setPreferredSize(new java.awt.Dimension(1100, 701));

        jPanel1.setBackground(new java.awt.Color(52, 152, 219));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(1080, 701));

        ImageIcon icon = new ImageIcon(getClass().getResource("/icons/login.jpeg"));
        Image image = icon.getImage().getScaledInstance(160,140,Image.SCALE_SMOOTH);
        ImageIcon icon2 = new ImageIcon(image);
        jLabel1.setIcon(icon2);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Welcome to Quiz World");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Choose any Subject");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 204, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/exit_btn.png"))); // NOI18N
        jButton1.setToolTipText("press to exit from application");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane10.setBackground(new java.awt.Color(255, 255, 204));
        jScrollPane10.setForeground(new java.awt.Color(255, 153, 0));
        jScrollPane10.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane10.setViewportBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane10.setAutoscrolls(true);
        jScrollPane10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        jList1.setBackground(new java.awt.Color(51, 204, 255));
        jList1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "C", "C++", "C#", "Java", "Python", "PHP", "JS", "HTML", "CSS", "Ruby", "Rust", "R", "Basic", "Lisp" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setToolTipText("Choose any one");
        jList1.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jList1.setSelectionBackground(new java.awt.Color(255, 51, 102));
        jList1.setSelectionForeground(new java.awt.Color(255, 255, 204));
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel4.setBackground(new java.awt.Color(52, 152, 219));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("PLanguages");
        jLabel4.setOpaque(true);

        jList2.setBackground(new java.awt.Color(51, 204, 255));
        jList2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Computer", "Computer2", "Accounting", "Earth", "Geography", "History", "Human Body", "Facts", "Computer3", "Computer4", "Computer5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList2.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jList2.setSelectionBackground(new java.awt.Color(255, 51, 102));
        jList2.setSelectionForeground(new java.awt.Color(255, 255, 204));
        jList2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList2ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jList2);

        jLabel5.setBackground(new java.awt.Color(52, 152, 219));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("General");
        jLabel5.setOpaque(true);

        jList3.setBackground(new java.awt.Color(51, 204, 255));
        jList3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jList3.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Physics", "Biology", "Chemistry", "Astrology", "Mathematics", "Geology", "Engineering", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList3.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList3.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jList3.setSelectionBackground(new java.awt.Color(255, 51, 102));
        jList3.setSelectionForeground(new java.awt.Color(255, 255, 204));
        jList3.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList3ValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(jList3);

        jLabel6.setBackground(new java.awt.Color(52, 152, 219));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Sciences");
        jLabel6.setOpaque(true);

        jList4.setBackground(new java.awt.Color(51, 204, 255));
        jList4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jList4.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "ICT", "DataBases", "DesignPatterns", "DataStructures", "Algorithms", "TheoryOfAutomata", "SoftwareRequirement", "CyberSecurity" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList4.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList4.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jList4.setSelectionBackground(new java.awt.Color(255, 51, 102));
        jList4.setSelectionForeground(new java.awt.Color(255, 255, 204));
        jList4.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList4ValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(jList4);

        jLabel7.setBackground(new java.awt.Color(52, 152, 219));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Computer");
        jLabel7.setOpaque(true);

        jList6.setBackground(new java.awt.Color(51, 204, 255));
        jList6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jList6.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "World Politics", "Constitution", "Pakistan", "Civics", "Foreign Policy", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList6.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList6.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jList6.setSelectionBackground(new java.awt.Color(255, 51, 102));
        jList6.setSelectionForeground(new java.awt.Color(255, 255, 204));
        jList6.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList6ValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(jList6);

        jLabel8.setBackground(new java.awt.Color(52, 152, 219));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Political");
        jLabel8.setOpaque(true);

        jLabel9.setBackground(new java.awt.Color(52, 152, 219));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Maths");
        jLabel9.setOpaque(true);

        jList5.setBackground(new java.awt.Color(51, 204, 255));
        jList5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jList5.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Logics", "Calculus", "Geometry", "Discrete Maths", "Graphs", "Theorems", "Algebra", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList5.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList5.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jList5.setSelectionBackground(new java.awt.Color(255, 51, 102));
        jList5.setSelectionForeground(new java.awt.Color(255, 255, 204));
        jList5.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList5ValueChanged(evt);
            }
        });
        jScrollPane6.setViewportView(jList5);

        jList7.setBackground(new java.awt.Color(51, 204, 255));
        jList7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jList7.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Ms Word", "Ms Excel", "Ms Access", "Ms PowerPoint", "Git", "Command Prompt", "Adobe Acrobat" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList7.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList7.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jList7.setSelectionBackground(new java.awt.Color(255, 51, 102));
        jList7.setSelectionForeground(new java.awt.Color(255, 255, 204));
        jList7.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList7ValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(jList7);

        jLabel10.setBackground(new java.awt.Color(52, 152, 219));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Tools");
        jLabel10.setOpaque(true);

        jList8.setBackground(new java.awt.Color(51, 204, 255));
        jList8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jList8.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "MySql", "MongoDB", "PostgreSQL", "SQL Server", "Oracle", "SqlLite", "Amazon" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList8.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList8.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jList8.setSelectionBackground(new java.awt.Color(255, 51, 102));
        jList8.setSelectionForeground(new java.awt.Color(255, 255, 204));
        jList8.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList8ValueChanged(evt);
            }
        });
        jScrollPane8.setViewportView(jList8);

        jLabel11.setBackground(new java.awt.Color(52, 152, 219));
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("DataBases");
        jLabel11.setOpaque(true);

        jList9.setBackground(new java.awt.Color(51, 204, 255));
        jList9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jList9.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "SEO", "Google Ads", "Windows", "Linux", "Mac OS", "AI", "GUI", "OOP", "NoSQL" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList9.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList9.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jList9.setSelectionBackground(new java.awt.Color(255, 51, 102));
        jList9.setSelectionForeground(new java.awt.Color(255, 255, 204));
        jList9.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList9ValueChanged(evt);
            }
        });
        jScrollPane9.setViewportView(jList9);

        jLabel12.setBackground(new java.awt.Color(52, 152, 219));
        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Others");
        jLabel12.setOpaque(true);

        jLabel13.setBackground(new java.awt.Color(52, 152, 219));
        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("FrameWorks");
        jLabel13.setOpaque(true);

        jList10.setBackground(new java.awt.Color(51, 204, 255));
        jList10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jList10.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Flask", "TensorFlow", "React", "Angular", "Django", "Spring Boot", "Hibernate", " ", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList10.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList10.setToolTipText("underConstruction!!");
        jList10.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jList10.setSelectionBackground(new java.awt.Color(255, 51, 102));
        jList10.setSelectionForeground(new java.awt.Color(255, 255, 153));
        jList10.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList10ValueChanged(evt);
            }
        });
        jScrollPane11.setViewportView(jList10);

        jLabel14.setBackground(new java.awt.Color(52, 152, 219));
        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Libraries");
        jLabel14.setOpaque(true);

        jList11.setBackground(new java.awt.Color(51, 204, 255));
        jList11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jList11.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Tkinter", "Swing", "Moment.js", "Chart.js", "Redux", "Requests", "Pandas", "NumPy", "Matplotlib", " ", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList11.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList11.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jList11.setSelectionBackground(new java.awt.Color(255, 51, 102));
        jList11.setSelectionForeground(new java.awt.Color(255, 255, 153));
        jList11.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList11ValueChanged(evt);
            }
        });
        jScrollPane12.setViewportView(jList11);

        jLabel15.setBackground(new java.awt.Color(52, 152, 219));
        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("PackageManagers");
        jLabel15.setOpaque(true);

        jList12.setBackground(new java.awt.Color(51, 204, 255));
        jList12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jList12.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "npm", "pip", "Composer", "Cargo", "Nu-Get", "RubyGems", "Homebrew", "Maven", "Gradle" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList12.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList12.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jList12.setSelectionBackground(new java.awt.Color(255, 51, 102));
        jList12.setSelectionForeground(new java.awt.Color(255, 255, 153));
        jList12.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList12ValueChanged(evt);
            }
        });
        jScrollPane13.setViewportView(jList12);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jLabel5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jLabel6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(110, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane4)
                                .addComponent(jScrollPane7))
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jLabel13))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jLabel7))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(101, 101, 101)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane8)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                                    .addComponent(jScrollPane5)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(25, 25, 25))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel14)
                                .addGap(142, 142, 142))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addGap(27, 27, 27)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)))
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10))
                                .addGap(28, 28, 28)
                                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jScrollPane10.setViewportView(jPanel2);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 204, 255));
        jButton2.setText("About");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(51, 204, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/backbutton.png"))); // NOI18N
        jButton3.setText("Menu");
        jButton3.setToolTipText("press to move back to main menu");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(62, 62, 62)
                .addComponent(jLabel3)
                .addGap(57, 57, 57)
                .addComponent(jButton3)
                .addGap(67, 67, 67)
                .addComponent(jButton2)
                .addGap(64, 64, 64)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged

        int selectedIndex = jList1.getSelectedIndex();
        if (selectedIndex != -1) {

            for (JList list : allLists) {
                if (list != jList1) {
                    list.clearSelection();
                }
            }
            String selectedValue = jList1.getSelectedValue();
            switch (selectedValue) {
                case "C" -> {
                    System.out.println("great c lover");
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "C++" -> {
                    System.out.println("awsome c++ lover");
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "C#" -> {
                    System.out.println("awesome c# lover");
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Java" -> {
                    System.out.println("java");
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Python" -> {
                    System.out.println("python lover");
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "PHP" -> {
                    System.out.println("php lover");
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "JS" -> {
                    System.out.println("js lover");
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "HTML" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "CSS" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Ruby" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Rust" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "R" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Basic" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Lisp" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                default -> JOptionPane.showMessageDialog(null, "select any item to proceed next", "selection error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
//            JOptionPane.showMessageDialog(null,"select any item to proceed next","selection error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jList1ValueChanged

    private void jList2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList2ValueChanged

        // general subjects
        int selectedIndex = jList2.getSelectedIndex();
        if (selectedIndex != -1) {
            for (JList list : allLists) {
                if (list != jList2) {
                    list.clearSelection();
                }
            }
            String selectedValue = jList2.getSelectedValue();
            switch (selectedValue) {
                case "Computer" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Computer2" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Computer3" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Computer4" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Computer5" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Accounting" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Earth" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Geography" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "History" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Human Body" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Facts" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                default -> {
                }
            }
        } else {
//            JOptionPane.showMessageDialog(null,"select any item to proceed next","selection error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jList2ValueChanged

    private void jList4ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList4ValueChanged

        int selectedIndex = jList4.getSelectedIndex();
        if (selectedIndex != -1) {
            for (JList list : allLists) {
                if (list != jList4) {
                    list.clearSelection();
                }
            }
            String selectedValue = jList4.getSelectedValue();

            switch (selectedValue) {
                case "ICT" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "DataBases" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "DesignPatterns" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "DataStructures" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Algorithms" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "TheoryOfAutomata" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "SoftwareRequirement" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "CyberSecurity" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }

                default -> {
                }
            }
        } else {
//            JOptionPane.showMessageDialog(null,"select any item to proceed next","selection error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jList4ValueChanged

    private void jList5ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList5ValueChanged

        int selectedIndex = jList5.getSelectedIndex();
        if (selectedIndex != -1) {
            for (JList list : allLists) {
                if (list != jList5) {
                    list.clearSelection();
                }
            }
            String selectedValue = jList5.getSelectedValue();
            switch (selectedValue) {
                case "Calculus" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Geometry" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Discrete Maths" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Graphs" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Theorems" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Algebra" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }

                default -> {
                }
            }
        } else {
//            JOptionPane.showMessageDialog(null,"select any item to proceed next","selection error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jList5ValueChanged

    private void jList6ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList6ValueChanged

        int selectedIndex = jList6.getSelectedIndex();
        if (selectedIndex != -1) {
            for (JList list : allLists) {
                if (list != jList6) {
                    list.clearSelection();
                }
            }
            String selectedValue = jList6.getSelectedValue();
            switch (selectedValue) {
                case "World Politics" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Constitution" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Pakistan" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Foreign Policy" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Civics" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                default -> JOptionPane.showMessageDialog(null, "select any item to proceed next", "selection error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
//            JOptionPane.showMessageDialog(null,"select any item to proceed next","selection error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jList6ValueChanged

    private void jList7ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList7ValueChanged

        int selectedIndex = jList7.getSelectedIndex();
        if (selectedIndex != -1) {
            for (JList list : allLists) {
                if (list != jList7) {
                    list.clearSelection();
                }
            }
            String selectedValue = jList7.getSelectedValue();
            switch (selectedValue) {
                case "Ms Word" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Ms Excel" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Ms Access" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Ms PowerPoint" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Git" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Command Prompt" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Adobe Acrobat" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Cmd" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }

                default -> {
                }
            }
        } else {
//            JOptionPane.showMessageDialog(null,"select any item to proceed next","selection error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jList7ValueChanged

    private void jList8ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList8ValueChanged

        int selectedIndex = jList8.getSelectedIndex();
        if (selectedIndex != -1) {
            for (JList list : allLists) {
                if (list != jList8) {
                    list.clearSelection();
                }
            }
            String selectedValue = jList8.getSelectedValue();

            switch (selectedValue) {
                case "MySql" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "MongoDB" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "PostGrade" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "SQL Server" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Oracle" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Amazon" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "SqlLite" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }

                default -> {
                }
            }
        } else {
//            JOptionPane.showMessageDialog(null,"select any item to proceed next","selection error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jList8ValueChanged

    private void jList9ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList9ValueChanged

        int selectedIndex = jList9.getSelectedIndex();
        if (selectedIndex != -1) {
            for (JList list : allLists) {
                if (list != jList9) {
                    list.clearSelection();
                }
            }
            String selectedValue = jList9.getSelectedValue();
            switch (selectedValue) {
                case "Windows" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Linux" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Mac OS" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "AI" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "GUI" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "OOP" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Google Ads" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "SEO" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "NoSQL" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }

                default -> {
                }
            }
        } else {
//            JOptionPane.showMessageDialog(null,"select any item to proceed next","selection error",JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jList9ValueChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       About_Frame.getInstance().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jList10ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList10ValueChanged

        int selectedIndex = jList9.getSelectedIndex();
        if (selectedIndex != -1) {
            for (JList list : allLists) {
                if (list != jList9) {
                    list.clearSelection();
                }
            }
            String selectedValue = jList9.getSelectedValue();
            switch (selectedValue) {
                case "Flask" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "TensorFlow" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "React" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Angular" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Django" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                
                case "Spring boot" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Hibernate" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
               
                default -> {
                }
            }
        } else {
//            JOptionPane.showMessageDialog(null,"select any item to proceed next","selection error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jList10ValueChanged

    private void jList11ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList11ValueChanged

        int selectedIndex = jList9.getSelectedIndex();
        if (selectedIndex != -1) {
            for (JList list : allLists) {
                if (list != jList9) {
                    list.clearSelection();
                }
            }

            String selectedValue = jList9.getSelectedValue();
            switch (selectedValue) {
                case "Tkinter" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Swing" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Moment.js" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Chart.js" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Redux" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Requests" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Pandas" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "NumPy" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Matplotlib" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                

                default -> {
                }
            }
        } else {
//            JOptionPane.showMessageDialog(null,"select any item to proceed next","selection error",JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jList11ValueChanged

    private void jList12ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList12ValueChanged

        int selectedIndex = jList9.getSelectedIndex();
        if (selectedIndex != -1) {
            for (JList list : allLists) {
                if (list != jList9) {
                    list.clearSelection();
                }
            }
            String selectedValue = jList9.getSelectedValue();
            switch (selectedValue) {
                case "npm" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "pip" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Composer" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Cargo" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Nu-Get" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "RubyGems" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Homebrew" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Maven" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Gradle" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }

                default -> {
                }
            }
        } else {
//            JOptionPane.showMessageDialog(null,"select any item to proceed next","selection error",JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jList12ValueChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

       Menu.getInstance().setVisible(true);
        setVisible(false);

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jList3ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList3ValueChanged
        // Science

        int selectedIndex = jList3.getSelectedIndex();
        if (selectedIndex != -1) {
            for (JList list : allLists) {
                if (list != jList3) {
                    list.clearSelection();
                }
            }
            String selectedValue = jList3.getSelectedValue();
            switch (selectedValue) {
                case "Physics" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Biology" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Chemistry" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Astrology" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Geology" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Engineering" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }
                case "Mathematics" -> {
                    TermsAndConditions.getInstance(selectedValue).setVisible(true);
                    this.setVisible(false);
                }

                default -> {
                }
            }
        } else {
            //            JOptionPane.showMessageDialog(null,"select any item to proceed next","selection error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jList3ValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
//            new splashscreen.SplashScreen(null, true).setVisible(true);
            new Main().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList10;
    private javax.swing.JList<String> jList11;
    private javax.swing.JList<String> jList12;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JList<String> jList4;
    private javax.swing.JList<String> jList5;
    private javax.swing.JList<String> jList6;
    private javax.swing.JList<String> jList7;
    private javax.swing.JList<String> jList8;
    private javax.swing.JList<String> jList9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    // End of variables declaration//GEN-END:variables
}
